{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import'./App.css';// Make sure you style your app properly with CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[bostonStats,setBostonStats]=useState([]);const[nbaStats,setNbaStats]=useState([]);const[teams,setTeams]=useState([]);// State to store unique teams\nconst[selectedTeam1,setSelectedTeam1]=useState(\"\");const[selectedTeam2,setSelectedTeam2]=useState(\"\");const[matchupResult,setMatchupResult]=useState(null);const[error,setError]=useState(\"\");useEffect(()=>{// Fetch initial data for stats and teams\naxios.get('http://127.0.0.1:8000/show_data').then(response=>{console.log(\"Show Data Response:\",response.data);const nbaData=convertNestedObjectToArray(response.data.nba_stats);setNbaStats(nbaData);// Extract unique teams\nconst uniqueTeams=Array.from(new Set(nbaData.map(player=>player.Team)));setTeams(uniqueTeams);}).catch(error=>{setError(\"Error fetching data\");console.error(\"Error fetching data:\",error);});},[]);// Function to convert nested response data into an array of player objects\nconst convertNestedObjectToArray=nestedData=>{const keys=Object.keys(nestedData);const length=Object.keys(nestedData[keys[0]]).length;// Assume all columns have the same length\nlet dataArray=[];for(let i=0;i<length;i++){let player={};keys.forEach(key=>{player[key]=nestedData[key][i];});dataArray.push(player);}return dataArray;};// Handle prediction of specific matchups\nconst handleMatchupPrediction=()=>{if(selectedTeam1&&selectedTeam2){// Implement logic to get the prediction for the selected matchup\naxios.get(`http://127.0.0.1:8000/predict?team1=${selectedTeam1}&team2=${selectedTeam2}`).then(response=>{const prediction=response.data.predictions;if(prediction){setMatchupResult(prediction.Prediction?`${selectedTeam1} wins`:`${selectedTeam2} wins`);}else{setMatchupResult(\"No prediction available for this matchup\");}}).catch(error=>{console.error(\"Error fetching predictions:\",error);setMatchupResult(\"Error fetching predictions\");});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hero-banner\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stream the Chase for the NBA Championship\"}),/*#__PURE__*/_jsx(\"p\",{children:\"More games. Higher stakes. Stay tuned to every game and enjoy the NBA experience.\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"matchup-predictions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Matchup Predictions\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Select Team 1: \"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTeam1,onChange:e=>setSelectedTeam1(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Team\"}),teams.map((team,index)=>/*#__PURE__*/_jsx(\"option\",{value:team,children:team},index))]}),/*#__PURE__*/_jsx(\"label\",{children:\"Select Team 2: \"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTeam2,onChange:e=>setSelectedTeam2(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a Team\"}),teams.map((team,index)=>/*#__PURE__*/_jsx(\"option\",{value:team,children:team},index))]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleMatchupPrediction,children:\"Predict Matchup\"}),matchupResult&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Prediction Result: \",matchupResult]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"teams-stats\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"NBA Team Stats\"}),teams.map((team,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"team-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:team}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Player Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Games Played\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Points Per Game\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:nbaStats.filter(player=>player.Team===team).map((player,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:player.Player_Name}),/*#__PURE__*/_jsx(\"td\",{children:player.Position}),/*#__PURE__*/_jsx(\"td\",{children:player.Age}),/*#__PURE__*/_jsx(\"td\",{children:player.Games_Played}),/*#__PURE__*/_jsx(\"td\",{children:player.Points_Per_Game})]},index))})]})]},index))]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","jsx","_jsx","jsxs","_jsxs","App","bostonStats","setBostonStats","nbaStats","setNbaStats","teams","setTeams","selectedTeam1","setSelectedTeam1","selectedTeam2","setSelectedTeam2","matchupResult","setMatchupResult","error","setError","get","then","response","console","log","data","nbaData","convertNestedObjectToArray","nba_stats","uniqueTeams","Array","from","Set","map","player","Team","catch","nestedData","keys","Object","length","dataArray","i","forEach","key","push","handleMatchupPrediction","prediction","predictions","Prediction","className","children","style","color","value","onChange","e","target","team","index","onClick","border","filter","Player_Name","Position","Age","Games_Played","Points_Per_Game"],"sources":["C:/Users/karte/OneDrive/Documents/GitHub/MyReactApp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Make sure you style your app properly with CSS\n\nfunction App() {\n  const [bostonStats, setBostonStats] = useState([]);\n  const [nbaStats, setNbaStats] = useState([]);\n  const [teams, setTeams] = useState([]); // State to store unique teams\n  const [selectedTeam1, setSelectedTeam1] = useState(\"\");\n  const [selectedTeam2, setSelectedTeam2] = useState(\"\");\n  const [matchupResult, setMatchupResult] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch initial data for stats and teams\n    axios.get('http://127.0.0.1:8000/show_data')\n      .then(response => {\n        console.log(\"Show Data Response:\", response.data);\n        const nbaData = convertNestedObjectToArray(response.data.nba_stats);\n        setNbaStats(nbaData);\n\n        // Extract unique teams\n        const uniqueTeams = Array.from(new Set(nbaData.map(player => player.Team)));\n        setTeams(uniqueTeams);\n      })\n      .catch(error => {\n        setError(\"Error fetching data\");\n        console.error(\"Error fetching data:\", error);\n      });\n\n  }, []);\n\n  // Function to convert nested response data into an array of player objects\n  const convertNestedObjectToArray = (nestedData) => {\n    const keys = Object.keys(nestedData);\n    const length = Object.keys(nestedData[keys[0]]).length; // Assume all columns have the same length\n\n    let dataArray = [];\n    for (let i = 0; i < length; i++) {\n      let player = {};\n      keys.forEach(key => {\n        player[key] = nestedData[key][i];\n      });\n      dataArray.push(player);\n    }\n\n    return dataArray;\n  };\n\n  // Handle prediction of specific matchups\n  const handleMatchupPrediction = () => {\n    if (selectedTeam1 && selectedTeam2) {\n      // Implement logic to get the prediction for the selected matchup\n      axios.get(`http://127.0.0.1:8000/predict?team1=${selectedTeam1}&team2=${selectedTeam2}`)\n        .then(response => {\n          const prediction = response.data.predictions;\n          if (prediction) {\n            setMatchupResult(prediction.Prediction ? `${selectedTeam1} wins` : `${selectedTeam2} wins`);\n          } else {\n            setMatchupResult(\"No prediction available for this matchup\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Error fetching predictions:\", error);\n          setMatchupResult(\"Error fetching predictions\");\n        });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Hero Banner Section */}\n      <div className=\"hero-banner\">\n        <h1>Stream the Chase for the NBA Championship</h1>\n        <p>More games. Higher stakes. Stay tuned to every game and enjoy the NBA experience.</p>\n      </div>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Matchup Predictions Section */}\n      <div className=\"matchup-predictions\">\n        <h2>Matchup Predictions</h2>\n        <label>Select Team 1: </label>\n        <select value={selectedTeam1} onChange={(e) => setSelectedTeam1(e.target.value)}>\n          <option value=\"\">Select a Team</option>\n          {teams.map((team, index) => (\n            <option key={index} value={team}>{team}</option>\n          ))}\n        </select>\n\n        <label>Select Team 2: </label>\n        <select value={selectedTeam2} onChange={(e) => setSelectedTeam2(e.target.value)}>\n          <option value=\"\">Select a Team</option>\n          {teams.map((team, index) => (\n            <option key={index} value={team}>{team}</option>\n          ))}\n        </select>\n\n        <button onClick={handleMatchupPrediction}>Predict Matchup</button>\n\n        {matchupResult && <p>Prediction Result: {matchupResult}</p>}\n      </div>\n\n      {/* Team Stats Section */}\n      <div className=\"teams-stats\">\n        <h2>NBA Team Stats</h2>\n        {teams.map((team, index) => (\n          <div key={index} className=\"team-stats\">\n            <h3>{team}</h3>\n            <table border=\"1\">\n              <thead>\n                <tr>\n                  <th>Rank</th>\n                  <th>Player Name</th>\n                  <th>Position</th>\n                  <th>Age</th>\n                  <th>Games Played</th>\n                  <th>Points Per Game</th>\n                </tr>\n              </thead>\n              <tbody>\n                {nbaStats.filter(player => player.Team === team).map((player, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{player.Player_Name}</td>\n                    <td>{player.Position}</td>\n                    <td>{player.Age}</td>\n                    <td>{player.Games_Played}</td>\n                    <td>{player.Points_Per_Game}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}